Unit XV: Case Study – Microsoft Azure


Execution Environment
The Windows Azure execution environment consists of a platform for applications and services hosted within one or more roles. The types of roles you can implement in Windows Azure are:

Azure Compute (Web and Worker Roles). A Windows Azure application consists of one or more hosted roles running within the Azure data centers. Typically there will be at least one Web role that is exposed for access by users of the application. The application may contain additional roles, including Worker roles that are typically used to perform background processing and support tasks for Web roles. For more detailed information see “Overview of Creating a Hosted Service for Windows Azure” athttp://technet.microsoft.com/en-au/library/gg432976.aspx and “Building an Application that Runs in a Hosted Service” at http://technet.microsoft.com/en-au/library/hh180152.aspx.
Virtual Machine (VM role). This role allows you to host your own custom instance of the Windows Server 2008 R2 Enterprise or Windows Server 2008 R2 Standard operating system within a Windows Azure data center. For more detailed information see “Creating Applications by Using a VM Role in Windows Azure” athttp://technet.microsoft.com/en-au/library/gg465398.aspx.
Data Management
Windows Azure, SQL Azure, and the associated services provide opportunities for storing and managing data in a range of ways. The following data management services and features are available:

Azure Storage: This provides four core services for persistent and durable data storage in the cloud. The services support a REST interface that can be accessed from within Azure-hosted or on-premises (remote) applications. For information about the REST API, see “Windows Azure Storage Services REST API Reference” athttp://msdn.microsoft.com/en-us/library/dd179355.aspx. The four storage services are:
The Azure Table Service provides a table-structured storage mechanism based on the familiar rows and columns format, and supports queries for managing the data. It is primarily aimed at scenarios where large volumes of data must be stored, while being easy to access and update. For more detailed information see “Table Service Concepts” at http://msdn.microsoft.com/en-us/library/dd179463.aspx and “Table Service API” at http://msdn.microsoft.com/en-us/library/dd179423.aspx.
The Binary Large Object (BLOB) Service provides a series of containers aimed at storing text or binary data. It provides both Block BLOB containers for streaming data, and Page BLOB containers for random read/write operations. For more detailed information see “Understanding Block Blobs and Page Blobs” athttp://msdn.microsoft.com/en-us/library/ee691964.aspx and “Blob Service API” at http://msdn.microsoft.com/en-us/library/dd135733.aspx.
The Queue Service provides a mechanism for reliable, persistent messaging between role instances, such as between a Web role and a Worker role. For more detailed information see “Queue Service Concepts” at http://msdn.microsoft.com/en-us/library/dd179353.aspx and “Queue Service API” athttp://msdn.microsoft.com/en-us/library/dd179363.aspx.
Windows Azure Drives provide a mechanism for applications to mount a single volume NTFS VHD as a Page BLOB, and upload and download VHDs via the BLOB. For more detailed information see “Windows Azure Drive” (PDF) at http://go.microsoft.com/?linkid=9710117.
SQL Azure Database: This is a highly available and scalable cloud database service built on SQL Server technologies, and supports the familiar T-SQL based relational database model. It can be used with applications hosted in Windows Azure, and with other applications running on-premises or hosted elsewhere. For more detailed information see “SQL Azure Database” at http://msdn.microsoft.com/en-us/library/ee336279.aspx.
Data Synchronization: SQL Azure Data Sync is a cloud-based data synchronization service built on Microsoft Sync Framework technologies. It provides bi-directional data synchronization and data management capabilities allowing data to be easily shared between multiple SQL Azure databases and between on-premises and SQL Azure databases. For more detailed information see “Microsoft Sync Framework Developer Center” at http://msdn.microsoft.com/en-us/sync.
Caching: This service provides a distributed, in-memory, low latency and high throughput application cache service that requires no installation or management, and dynamically increases and decreases the cache size automatically as required. It can be used to cache application data, ASP.NET session state information, and for ASP.NET page output caching. For more detailed information see “Caching Service (Windows Azure AppFabric)” at http://msdn.microsoft.com/en-us/library/gg278356.aspx.
Networking Services
Windows Azure provides several networking services that you can take advantage of to maximize performance, implement authentication, and improve manageability of your hosted applications. These services include the following:

Content Delivery Network (CDN). The CDN allows you to cache publicly available static data for applications at strategic locations that are closer (in network delivery terms) to end users. The CDN uses a number of data centers at many locations around the world, which store the data in BLOB storage that has anonymous access. These do not need to be locations where the application is actually running. For more detailed information see “Delivering High-Bandwidth Content with the Windows Azure CDN” athttp://msdn.microsoft.com/en-us/library/ee795176.aspx.
Virtual Network Connect. This service allows you to configure roles of an application running in Windows Azure and computers on your on-premises network so that they appear to be on the same network. It uses a software agent running on the on-premises computer to establish an IPsec-protected connection to the Windows Azure roles in the cloud, and provides the capability to administer, manage, monitor, and debug the roles directly. For more detailed information see “Connecting Local Computers to Windows Azure Roles” at http://msdn.microsoft.com/en-us/library/gg433122.aspx.
Virtual Network Traffic Manager. This is a service that allows you to set up request redirection and load balancing based on three different methods. Typically you will use Traffic Manager to maximize performance by redirecting requests from users to the instance in the closest data center using the Performance method. Alternative load balancing methods available are Failover and Round Robin. For more detailed information see “Windows Azure Traffic Manager” at http://msdn.microsoft.com/en-us/WAZPlatformTrainingCourse_WindowsAzureTrafficManager.
Access Control. This is a standards-based service for identity and access control that makes use of a range of identity providers (IdPs) that can authenticate users. ACS acts as a Security Token Service (STS), or token issuer, and makes it easier to take advantage of federation authentication techniques where user identity is validated in a realm or domain other than that in which the application resides. An example is controlling user access based on an identity verified by an identity provider such as Windows Live ID or Google. For more detailed information see “Access Control Service 2.0” at http://msdn.microsoft.com/en-us/library/gg429786.aspx and “Claims Based Identity & Access Control Guide” at http://claimsid.codeplex.com/.
Service Bus. This provides a secure messaging and data flow capability for distributed and hybrid applications, such as communication between Windows Azure hosted applications and on-premises applications and services, without requiring complex firewall and security infrastructures. It can use a range of communication and messaging protocols and patterns to provide delivery assurance, reliable messaging; can scale to accommodate varying loads; and can be integrated with on-premises BizTalk Server artifacts. For more detailed information see “AppFabric Service Bus” at http://msdn.microsoft.com/en-us/library/ee732537.aspx
